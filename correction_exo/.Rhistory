names<-cbind(original_names,new_names)
fullmat$Date<-substr(fullmat$Date,1,19)
justOn$Date<-substr(justOn$Date,1,19)
fullmat$Date<-as.POSIXct(fullmat$Date,format="%d/%m/%Y %H:%M:%OS")
justOn$Date<-as.POSIXct(justOn$Date,format="%d/%m/%Y %H:%M:%OS")
vecp<-c(1,2,13,14,21,26,27,28,29)
vecg<-c(3:12)
fullmat<-fullmat[order(fullmat$Date),]
justOn<-justOn[order(justOn$Date),]
#unités se mesures
unite<-c("Bar","Bar","Bar","NI/min","%","NI/min","Bar","NI/min","%",
"NI/min","Bar","mbar","Tr/min","Tr/min"
,"um pp","um pp","um pp",
"um pp","um pp","um pp",
"°C","°C","°C","°C","°C",
"%","Bar","°C","°C","°C")
names<-cbind(names,unite)
df <- fullmat
dim(df)
names(df)
ggplot(data = fullmat)+aes(x = Date , y = DFP1)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz",subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
geom_hline(yintercept = 270,color="blue")
library(tidyverse)
ggplot(data = fullmat)+aes(x = Date , y = DFP1)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz",subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
geom_hline(yintercept = 270,color="blue")
ggplot(data = fullmat)+aes(x = Date , y = DFP1)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz",subtitle="Début de hausses des fuites récurrentes après le 09/2018" )#+
ggplot(data = fullmat)+aes(x = Date , y = DFP1)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz")#,subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
ggplot(data = fullmat)+aes(x = Date , y = DFP1)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz")+
theme_classic()#,subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
pdf("~/Dropbox/LAURENT/AUTO_ENTRE/GRTGAZ/SLIDES_MAI2019/debit1.pdf")
ggplot(data = fullmat)+aes(x = Date , y = DFP1)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz")+
theme_classic()#,subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
#  geom_hline(yintercept = 270,color="blue")
dev.off()
ggplot(data = fullmat)+aes(x = Date , y = DFP2)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz")+
theme_classic()#,subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
pdf("~/Dropbox/LAURENT/AUTO_ENTRE/GRTGAZ/SLIDES_MAI2019/debit1.pdf")
ggplot(data = fullmat)+aes(x = Date , y = DFP2)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz")+
theme_classic()#,subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
#  geom_hline(yintercept = 270,color="blue")
dev.off()
pdf("~/Dropbox/LAURENT/AUTO_ENTRE/GRTGAZ/SLIDES_MAI2019/debit1.pdf")
ggplot(data = fullmat)+aes(x = Date , y = DFP1)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz")+
theme_classic()#,subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
#  geom_hline(yintercept = 270,color="blue")
dev.off()
pdf("~/Dropbox/LAURENT/AUTO_ENTRE/GRTGAZ/SLIDES_MAI2019/debit2.pdf")
ggplot(data = fullmat)+aes(x = Date , y = DFP2)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite primaire CA sur 2'ans", x = "temps", y = "Fuite de gaz")+
theme_classic()#,subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
#  geom_hline(yintercept = 270,color="blue")
dev.off()
pdf("~/Dropbox/LAURENT/AUTO_ENTRE/GRTGAZ/SLIDES_MAI2019/debit2.pdf")
ggplot(data = fullmat)+aes(x = Date , y = DFP2)+
geom_line(color = "red", size=0.5)+
labs(title="Débit de fuite secondaire CA sur 2'ans", x = "temps", y = "Fuite de gaz")+
theme_classic()#,subtitle="Début de hausses des fuites récurrentes après le 09/2018" )+
#  geom_hline(yintercept = 270,color="blue")
dev.off()
df <- fullmat
df$Date <- df$Date %>% as_date()
library(lubridate)
df <- fullmat
df$Date <- df$Date %>% as_date()
df <-  df %>% mutate(Day=ymd(Date))
df <- df %>% select(-State)
df1 <- df %>% group_by(Day) %>% summarise(dfP1_max=max(DFP1),dfP2_max=max(DFP2)) %>%
mutate(Y1=dfP1_max>=80,Y2=dfP2_max>=80)
summary(df1)
df2 <- df %>% select(-DFP1,-DFP2,-Date) %>% group_by(Day) %>% summarise_all(mean)
summary(df2)
df2 %>% head(5)
df2 <- df2 %>% mutate(Day_cle=Day+1) %>% select(-Day)
df3 <- inner_join(df1,df2,by=c("Day"="Day_cle"))
df4 <- df3 %>% select(-Day,-dfP1_max,-dfP2_max,-Y2,-DGG1)
dim(df4)
mod1 <- glm(Y1~.,data=df4,family=binomial)
summary(mod1)
coef(mod1)
summary(mod1) %>% names()
summary(mod1)$coefficients
summary(mod1)$coefficients %>% arrange(desc(abs(3)))
summary(mod1)$coefficients %>% as.tibble()
summary(mod1)$coefficients %>% as.tibble() %>% arrange(`z value`)
summary(mod1)$coefficients %>% as.tibble() %>% arrange(abs(`z value`))
summary(mod1)$coefficients %>% as.tibble() %>% arrange(desc(abs(`z value`)))
summary(mod1)$coefficients %>% data.frame() %>% arrange(desc(abs(`z value`)))
mod1 <- glm(Y1~.,data=df4,family=binomial)
summary(mod1)$coefficients %>% data.frame() %>% arrange(desc(abs(`z value`)))
summary(mod1)$coefficients %>% as.data.frame() %>% arrange(desc(abs(`z value`)))
summary(mod1)$coefficients %>% as.data.frame() %>% arrange(desc(abs(`z value`)))
a<-summary(mod1)$coefficients
rownames(a)
Coef <- summary(mod1)$coefficients %>% mutate(var=rownames(summary(mod1)$coefficients))
Coef <- summary(mod1)$coefficients %>% as.data.frame() %>% mutate(var=rownames(summary(mod1)$coefficients))
head(Coef)
Coef <- summary(mod1)$coefficients %>% as.data.frame() %>% mutate(var=rownames(summary(mod1)$coefficients)) %>% select(c(5,1:4))
Coef
Coef %>% arrange(desc(abs(`z value`)))
Coef %>% arrange(desc(abs(`z value`))) %>% slice(1:8)
q()
library(readxl)
library(tidyverse)
library(broom)
library(reshape2)
library(segmented)
#Data_clash_stats_V1 <- read_excel("Dropbox/LAURENT/ARTICLES/SPORT/DATA/Data_clash_stats V1.xlsx")
#View(Data_clash_stats_V1)
BLOC <- read_excel("~/Dropbox/LAURENT/ARTICLES/SPORT/DATA/Data_clash_stats V3.xlsx",sheet="BLOC")
CONS <- read_excel("~/Dropbox/LAURENT/ARTICLES/SPORT/DATA/Data_clash_stats V3.xlsx",sheet="CONS")
OUTDOOR <- read_excel("~/Dropbox/LAURENT/ARTICLES/SPORT/DATA/Data_clash_stats V3.xlsx",sheet="OUTDOOR")
#suppression des % dans les noms de variables
names(BLOC) <- str_replace_all(names(BLOC),"%","")
names(CONS) <- str_replace_all(names(CONS),"%","")
names(OUTDOOR) <- str_replace_all(names(OUTDOOR),"%","")
nom_rep <- "~/Dropbox/LAURENT/ARTICLES/SPORT/RES/PARTIE2_BIS/CONS"
analyse <- "2.1.2"
trace_reg_seg <- function(df,x,y,sujet,sp=FALSE,export=NULL,analyse=NULL,graine=12,niv_IC=0.95,KP06=FALSE){
if (!sp){
ind_sp <- which(df$Duree_recupe_theorique_min=="SP")
df <- df[-ind_sp,]
}
df <- df %>% dplyr::select(Code_sujet,x,y) %>% filter(Code_sujet %in% sujet)
form <- as.formula(paste(y,"~",x))
res_graphe <- matrix(0,nrow=2,ncol=4) %>% as.data.frame()
names(res_graphe) <- c("x","y","xend","yend")
res_graphe1 <- matrix(0,nrow=2,ncol=4) %>% as.data.frame()
names(res_graphe1) <- c("x","y","xend","yend")
bpoints <- matrix(0,nrow=length(sujet),ncol=5) %>% as.data.frame()
bpoints[,1] <- sujet
names(bpoints) <- c("Sujets","TIR1","IC_inf","IC_sup","TIR_LOO")
for (i in 1:length(sujet)){
dfi <- df %>% filter(Code_sujet==sujet[i]) %>% dplyr::select(-Code_sujet)
dfi[,x] <- as.numeric(unlist(dfi[,x]))
dfi[,y] <- as.numeric(unlist(dfi[,y]))
## Methode 1
set.seed(graine)
if (KP06 & sujet[i]=="KP06"){dfi <- dfi[-c(1,7),]}
modi <- lm(form,data=dfi)
set.seed(graine)
#    ai <- segmented(modi,control=seg.control(list(nonParam=TRUE,display=FALSE,seed=graine+i)))
if.false <- F
nb.iter <- 1
while(if.false == F & nb.iter<=50){
tryCatch({
nb.iter <- nb.iter+1
ai <- segmented(modi,control=seg.control(toll=1e-4))
#    s <- segmented(lm.model, seg.Z =~ydata, psi = NA)
if.false <- T
}, error = function(e){
}, finally = {})
}
if (nb.iter>50){
bpoints[i,2:4] <- mean(unlist(dfi[,1]))
const <- rep(coef(modi)[1],2)
coef_dir <- rep(coef(modi)[2],2)
} else {
bpoints[i,2:4] <- unlist(confint(ai,level=niv_IC))
const <- intercept(ai) %>% unlist()
coef_dir <- slope(ai)[[1]][,1] %>% unlist()
}
res_graphe$x[1] <- min(dfi[,x])
res_graphe$y[1] <- const[1]+coef_dir[1]*min(dfi[,x])
res_graphe$xend[1] <- bpoints[i,2]
res_graphe$yend[1] <- const[1]+coef_dir[1]*bpoints[i,2]
res_graphe$x[2] <- res_graphe$xend[1]
res_graphe$y[2] <- res_graphe$yend[1]
res_graphe$xend[2] <- max(dfi[,x])
res_graphe$yend[2] <- const[2]+coef_dir[2]*max(dfi[,x])
if (nb.iter>50){bpoints[i,2:4] <- NA}
# Methode 2 : LOO
bpi <- NULL
for (j in 1:nrow(dfi)){
modj <- lm(form,data=dfi[-j,])
aj <- segmented(modj,control=seg.control(toll=1e-4,stop.if.error = FALSE,n.boot = 0))
if (length(aj$psi)==3){
bpi <- c(bpi,aj$psi[2])
} else {}
}
modi <- lm(form,data=dfi)
if (is.null(bpi)){
const <- rep(coef(modi)[1],2)
coef_dir <- rep(coef(modi)[2],2)
bpoints[i,5] <- mean(unlist(dfi[,1]))
} else {
ai <- segmented(modi,control=seg.control(toll=1e-4,stop.if.error = FALSE,n.boot = 0,it.max=1),psi=mean(bpi))
const <- intercept(ai) %>% unlist()
coef_dir <- slope(ai)[[1]][,1] %>% unlist()
bpoints[i,5] <- mean(bpi)
}
#    d1 <- dfi %>% filter(.data[[x]]<=mean(bpi))
#    d2 <- dfi %>% filter(.data[[x]]>mean(bpi))
#    m1 <- lm(form,data=d1) %>% coef() %>% unlist()
#    m2 <- lm(form,data=d2) %>% coef() %>% unlist()
#    const <- c(m1[1],m2[1])
#    coef_dir <- c(m1[2],m2[2])
res_graphe1$x[1] <- min(dfi[,x])
res_graphe1$y[1] <- const[1]+coef_dir[1]*min(dfi[,x])
res_graphe1$xend[1] <- bpoints[i,5]
res_graphe1$yend[1] <- const[1]+coef_dir[1]*bpoints[i,5]
res_graphe1$x[2] <- res_graphe1$xend[1]
res_graphe1$y[2] <- res_graphe1$yend[1]
res_graphe1$xend[2] <- max(dfi[,x])
res_graphe1$yend[2] <- const[2]+coef_dir[2]*max(dfi[,x])
res_graphe2 <- bind_rows(Normal=res_graphe,Loo=res_graphe1,.id="Methode")
if (is.null(bpi)){bpoints[i,5] <- NA}
pi <- ggplot(res_graphe2)+aes(x=x,y=y)+geom_segment(aes(xend=xend,yend=yend,color=Methode),size=1)+theme_classic()+ggtitle(sujet[i])+xlab(x)+ylab(y)+
geom_point(data=dfi,aes_(x=as.name(x),y=as.name(y)))
if (!is.null(export)){
ggsave(file.path(nom_rep,paste("GRAPHES/graphes","_",analyse,"_",sujet[i],".pdf",sep="")),pi,device="pdf")
}
}
#  res_bpoints <- as.data.frame(round(bpoints,3)) %>% mutate(sujets=sujet)
#  names(res_bpoints)[1:3] <- c("TOR","binf","bsup")
#  graphe_IC <- ggplot(res_bpoints)+geom_point(aes(x=TOR,y=sujets))+geom_segment(aes(x=binf,y=sujets,xend=bsup,yend=sujets))+theme_classic()
#  if (!is.null(export)){
#    ggsave(file.path(nom_rep,paste("GRAPHES/graphes","_",analyse,"_","conf_int",".pdf",sep="")),graphe_IC,device="pdf")
#  }
if (!is.null(export)){
nom_rep <- paste(nom_rep,"/TABLEAUX",sep="")
write_csv(bpoints,file.path(nom_rep,paste("tab_tir","_",analyse,".csv",sep="")))
}
return(bpoints)
}
x <- c("Duree_recupe_reelle_sec")
y <- c("Rapport_TMMaMarchePost_TMMaM1_")
sujet <- c("AO21","AY22","BB01","BL03","BP04","CJ17","CM19","DF10","DJ23","FP08","GB02","KP06","LJ14","MG18","MY24","PJ11","RJ20")
CONS1 <- CONS %>% #select(Code_sujet,x,y) %>%
filter(!(Code_sujet=="BP04" & Duree_recupe_reelle_sec>500)) %>%
filter(!(Code_sujet=="CJ17" & Duree_recupe_reelle_sec==269)) %>%
filter(!(Code_sujet=="RJ20" & Duree_recupe_reelle_sec>500))
b3 <- trace_reg_seg(CONS1,x,y,sujet,sp=FALSE,export=nom_rep,analyse=analyse,graine=1234,niv_IC=0.95,KP06=FALSE)
b3
CONS1 <- CONS
b3 <- trace_reg_seg(CONS1,x,y,sujet,sp=FALSE,export=nom_rep,analyse=analyse,graine=1234,niv_IC=0.95,KP06=FALSE)
b3
x <- c("Duree_recupe_reelle_sec")
y <- c("Rapport_TMMaMarchePost_TMMaM1_")
sujet <- c("AO21","AY22","BB01","BL03","BP04","CJ17","CM19","DF10","DJ23","FP08","GB02","KP06","LJ14","MG18","MY24","PJ11","RJ20")
CONS1 <- CONS %>% #select(Code_sujet,x,y) %>%
filter(!(Code_sujet=="BP04" & Duree_recupe_reelle_sec>500)) %>%
filter(!(Code_sujet=="CJ17" & Duree_recupe_reelle_sec==269)) %>%
filter(!(Code_sujet=="RJ20" & Duree_recupe_reelle_sec>500))
#CONS1 <- CONS
b3 <- trace_reg_seg(CONS1,x,y,sujet,sp=FALSE,export=nom_rep,analyse=analyse,graine=1234,niv_IC=0.95,KP06=FALSE)
b3
q()
1/30
2/30
library(tidyverse)
ggplo(diamonds)+aes(x=cut)+geom_bar()
ggplot(diamonds)+aes(x=cut)+geom_bar()
ggplot(diamonds)+aes(x=cut)+geom_bar()
diamonds2 <- diamonds[sample(nrow(diamonds),5000),]
ggplot(diamonds2)+aes(x=cut)+geom_bar()
ggplot(diamonds2)+aes(x=cut)+geom_bar()
help(geom_path)
q()
q()
q()
1800/24
q()
q()
install.packages(c("kernlab", "plotROC"))
q()
q()
install.packages("pROC")
library(bestglm)
data(SAheart)
SAheart.X <- model.matrix(chd~.,data=SAheart)[,-1]
SAheart.Y <- SAheart$chd
mod.lasso <- glmnet(SAheart.X,SAheart.Y,family="binomial",alpha=1)
library(bestglm)
data(SAheart)
SAheart.X <- model.matrix(chd~.,data=SAheart)[,-1]
SAheart.Y <- SAheart$chd
library(glmnet)
mod.lasso <- glmnet(SAheart.X,SAheart.Y,family="binomial",alpha=1)
lam.lasso <- mod.lasso$lambda
lam <- lam.lasso[50]
coef(mod.lasso,s=lam)
mu <- apply(SAheart.X,2,mean)
sig <- apply(SAheart.X,2,sd)
mu.mat <- matrix(rep(mu,nrow(SAheart.X)),nrow=nrow(SAheart.X),byrow=T)
sig.mat <- matrix(rep(sig,nrow(SAheart.X)),nrow=nrow(SAheart.X),byrow=T)
SAheart.X.cr <- (SAheart.X-mu.mat)/sig.mat
mu <- apply(SAheart.X,2,mean)
sig <- apply(SAheart.X,2,sd)
mu.mat <- matrix(rep(mu,nrow(SAheart.X)),nrow=nrow(SAheart.X),byrow=T)
sig.mat <- matrix(rep(sig,nrow(SAheart.X)),nrow=nrow(SAheart.X),byrow=T)
SAheart.X.cr <- (SAheart.X-mu.mat)/sig.mat
mod.lasso1 <- glmnet(SAheart.X.cr,SAheart.Y,family="binomial",alpha=1)
lam1 <- mod.lasso1$lambda[50]
coef(mod.lasso1,s=lam1)[-1]/sig
n <- 500
p <- 100
set.seed(1234)
X <- matrix(rnorm(n*p),ncol=p)
beta <- c(1,3,2,1,2)
cl <- beta[1]*X[,1]+beta[2]*X[,2]+beta[3]*X[,3]+beta[4]*X[,4]+beta[5]*X[,5]
Y <- round(exp(cl)/(1+exp(cl)))
df <- data.frame(X,Y)
head(df)
m <- glm(Y~.,data=df,family=binomial)
summary(m)
m <- glm(Y~.,data=df[,1:6],family=binomial)
summary(m)
summary(df)
names(df)
summary(cl)
m <- glm(Y~.,data=df[,1:6],family="binomial")
summary(m)
dim(cl)
dim(df)
length(cl)
n <- 500
p <- 100
set.seed(1234)
X <- matrix(rnorm(n*p),ncol=p)
beta <- c(1,3,2,1,2)
cl <- beta[1]*X[,1]+beta[2]*X[,2]+beta[3]*X[,3]+beta[4]*X[,4]+beta[5]*X[,5]
Y <- rbinom(n,1,exp(cl)/(1+exp(cl)))
df <- data.frame(X,Y)
m <- glm(Y~.,data=df[,1:6],family="binomial")
summary(m)
write.csv(df,file="~/Dropbox/LIVRE_REGRESSION/GITHUB/regression-avec-R.github.io/correction_exo/logit_ridge_lasso.csv")
setwd("~/Dropbox/LIVRE_REGRESSION/GITHUB")
setwd("~/Dropbox/LIVRE_REGRESSION/GITHUB/regression-avec-R.github.io/correction_exo")
df <- read.csv("logit_ridge_lasso.csv")
dim(df)
help("write.csv")
n <- 500
p <- 100
set.seed(1234)
X <- matrix(rnorm(n*p),ncol=p)
beta <- c(1,3,2,1,2)
cl <- beta[1]*X[,1]+beta[2]*X[,2]+beta[3]*X[,3]+beta[4]*X[,4]+beta[5]*X[,5]
Y <- rbinom(n,1,exp(cl)/(1+exp(cl)))
df <- data.frame(X,Y)
write.csv(df,file="~/Dropbox/LIVRE_REGRESSION/GITHUB/regression-avec-R.github.io/correction_exo/logit_ridge_lasso.csv",row.names = FALSE)
df <- read.csv("logit_ridge_lasso.csv")
dim(df)
names(df)
df <- read.csv("logit_ridge_lasso.csv")
set.seed(1254)
perm <- sample(nrow(donnees))
df <- read.csv("logit_ridge_lasso.csv")
set.seed(1254)
perm <- sample(nrow(df))
dapp <- df[perm[1:300],]
dtest <- df[perm[301:500],]
hlp(step())
help(step)
logit <- glm(Y~.,data=dapp,family="binomial")
logit.step <- step(logit,direction="backward",trace=0)
logit.step
head(df)
logit <- glm(Y~.,data=dapp,family="binomial")
summary(logit)
n <- 500
p <- 100
set.seed(1234)
X <- matrix(rnorm(n*p),ncol=p)
beta <- c(1,3,2,1,2)
cl <- beta[1]*X[,1]+beta[2]*X[,2]+beta[3]*X[,3]+beta[4]*X[,4]+beta[5]*X[,5]
Y <- rbinom(n,1,exp(cl)/(1+exp(cl)))
df <- data.frame(X,Y)
write.csv(df,file="~/Dropbox/LIVRE_REGRESSION/GITHUB/regression-avec-R.github.io/correction_exo/logit_ridge_lasso.csv",row.names = FALSE)
set.seed(1254)
perm <- sample(nrow(df))
dapp <- df[perm[1:300],]
dtest <- df[perm[301:500],]
logit <- glm(Y~.,data=dapp,family="binomial")
summary(logit)
help(rbinom)
logit <- glm(Y~.,data=dapp[,1:6],family="binomial")
logit <- glm(Y~.,data=dapp[,c(1:6,101)],family="binomial")
summary(logit)
names(dapp)
names(df)
logit1 <- glm(Y~.,data=dapp,family="binomial")
summary(logit1)
summary(logit.step)
Xapp <- model.matrix(Y~.,data=dapp)[,-1]
Xtest <- model.matrix(Y~.,data=dtest)[,-1]
Yapp <- dapp$Y
Ytest <- dtest$Y
lasso1 <- cv.glmnet(Xapp,Yapp,family="binomial",alpha=1)
plot(lasso1)
ridge1 <- cv.glmnet(Xapp,Yapp,family="binomial",alpha=0)
plot(ridge1)
ridge1 <- cv.glmnet(Xapp,Yapp,family="binomial",alpha=0,lambda=exp(seq(-10,-1,length=100)))
plot(ridge1)
ridge1 <- cv.glmnet(Xapp,Yapp,family="binomial",alpha=0,lambda=exp(seq(-6,-1,length=100)))
plot(ridge1)
lasso2 <- cv.glmnet(Xapp,Yapp,family="binomial",alpha=1,type.measure = "auc")
plot(lasso2)
ridge2 <- cv.glmnet(Xapp,Yapp,family="binomial",alpha=0,type.measure = "auc")
plot(ridge2)
ridge2 <- cv.glmnet(Xapp,Yapp,family="binomial",alpha=0,type.measure = "auc",lambda=exp(seq(-6,-1,length=100)))
plot(ridge2)
ridge2 <- cv.glmnet(Xapp,Yapp,family="binomial",alpha=0,type.measure = "auc",lambda=exp(seq(-3,2,length=100)))
plot(ridge2)
help(predict.glmnet)
score <- data.frame(logit=predict(logit,newdata=dtest,type="response"),
step=predict(logit.step,newdata=dtest,type="response"),
lasso1=as.vector(predict(lasso1,type="response",newx=Xtest)))
head(score)
score <- data.frame(logit=predict(logit,newdata=dtest,type="response"),
step=predict(logit.step,newdata=dtest,type="response"),
lasso1=as.vector(predict(lasso1,type="response",newx=Xtest)),
ridge1=as.vector(predict(ridge1,type="response",newx=Xtest)),
lasso2=as.vector(predict(lasso2,type="response",newx=Xtest)),
ridge2=as.vector(predict(ridge2,type="response",newx=Xtest)))
score <- data.frame(logit=predict(logit,newdata=dtest,type="response"),
step=predict(logit.step,newdata=dtest,type="response"),
lasso1=as.vector(predict(lasso1,type="response",newx=Xtest)),
ridge1=as.vector(predict(ridge1,type="response",newx=Xtest)),
lasso2=as.vector(predict(lasso2,type="response",newx=Xtest)),
ridge2=as.vector(predict(ridge2,type="response",newx=Xtest))) %>%
mutate(obs=Ytest) %>% gather(key="Methode",value="score",-obs)
library(tidyverse)
score <- data.frame(logit=predict(logit,newdata=dtest,type="response"),
step=predict(logit.step,newdata=dtest,type="response"),
lasso1=as.vector(predict(lasso1,type="response",newx=Xtest)),
ridge1=as.vector(predict(ridge1,type="response",newx=Xtest)),
lasso2=as.vector(predict(lasso2,type="response",newx=Xtest)),
ridge2=as.vector(predict(ridge2,type="response",newx=Xtest))) %>%
mutate(obs=Ytest) %>% gather(key="Methode",value="score",-obs)
ggplot(score)+aes(d=score,m=obs,color=Methode)+geom_roc()
library(plotROC)
ggplot(score)+aes(d=score,m=obs,color=Methode)+geom_roc()
ggplot(score)+aes(m=score,d=obs,color=Methode)+geom_roc()
logit <- glm(Y~.,data=dapp,family="binomial")
library(tidyverse)
score <- data.frame(logit=predict(logit,newdata=dtest,type="response"),
step=predict(logit.step,newdata=dtest,type="response"),
lasso1=as.vector(predict(lasso1,type="response",newx=Xtest)),
ridge1=as.vector(predict(ridge1,type="response",newx=Xtest)),
lasso2=as.vector(predict(lasso2,type="response",newx=Xtest)),
ridge2=as.vector(predict(ridge2,type="response",newx=Xtest))) %>%
mutate(obs=Ytest) %>% gather(key="Methode",value="score",-obs)
library(plotROC)
ggplot(score)+aes(m=score,d=obs,color=Methode)+geom_roc()
ggplot(score)+aes(m=score,d=obs,color=Methode)+geom_roc()+theme_classic()
score %>% group_by(Methode) %>% summarise(pROC::auc(score,obs))
score %>% group_by(Methode) %>% summarise(pROC::auc(obs,score))
score %>% group_by(Methode) %>% summarise(AUC=pROC::auc(obs,score)) %>% arrange(desc(AUC))
score.app <- data.frame(logit=predict(logit,newdata=dapp,type="response"),
step=predict(logit.step,newdata=dapp,type="response"),
lasso1=as.vector(predict(lasso1,type="response",newx=Xapp)),
ridge1=as.vector(predict(ridge1,type="response",newx=Xapp)),
lasso2=as.vector(predict(lasso2,type="response",newx=Xapp)),
ridge2=as.vector(predict(ridge2,type="response",newx=Xapp))) %>%
mutate(obs=Yapp) %>% gather(key="Methode",value="score",-obs)
score %>% group_by(Methode) %>% summarise(AUC=pROC::auc(obs,score)) %>% arrange(desc(AUC))
prev.app <- score.app %>% mutate(prev=round(score))
prev.app %>% summarise(Err=mean(prev!=obs))
prev.app %>% group_by(Methode) %>% summarise(Err=mean(prev!=obs))
prev.app %>% group_by(Methode) %>% summarise(Err=mean(prev!=obs)) %>% arrange(Err)
prev.test <- score %>% mutate(prev=round(score))
prev.test %>% group_by(Methode) %>% summarise(Err=mean(prev!=obs)) %>% arrange(Err)
ad.data <- read.table("ad_data.txt",header=FALSE,sep=",",dec=".",na.strings = "?",strip.white = TRUE)
names(ad.data)[ncol(ad.data)] <- "Y"
ad.data$Y <- as.factor(ad.data$Y)
ad.data1 <- na.omit(ad.data)
dim(ad.data1)
X.ad <- model.matrix(Y~.,data=ad.data1)[,-1]
Y.ad <- ad.data1$Y
set.seed(1234)
bloc <- sample(1:10,nrow(ad.data1),replace=TRUE)
table(bloc)
score <- data.frame(matrix(0,nrow=nrow(ad.data1),ncol=4))
names(score) <- c("logit","ridge","lasso","en")
for (k in 1:10){
print(k)
ind.test <- bloc==k
dapp <- ad.data1[!ind.test,]
dtest <- ad.data1[ind.test,]
X.app <- X.ad[!ind.test,]
X.test <- X.ad[ind.test,]
Y.app <- Y.ad[!ind.test]
Y.test <- Y.ad[ind.test]
logit.k <- glm(Y~.,data=dapp,family="binomial")
lasso.k <- cv.glmnet(X.app,Y.app,family="binomial")
ridge.k <- cv.glmnet(X.app,Y.app,family="binomial",alpha=0)
en.k <- cv.glmnet(X.app,Y.app,family="binomial",alpha=0.5)
score[ind.test,] <- data.frame(logit=predict(logit.k,newdata=dtest,type="response"),
lasso=as.vector(predict(lasso.k,newx = X.test,type="response")),
ridge=as.vector(predict(ridge.k,newx = X.test,type="response")),
en=as.vector(predict(en.k,newx = X.test,type="response")))
}
q()
