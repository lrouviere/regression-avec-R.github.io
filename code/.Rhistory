library(visNetwork)
visTree(tree)
mod.step <- step(mod2,direction=c("backward"),k=log(1000))#,trace=0)
summary(mod.step)
mean(exp(-U)^2)
U <- runif(100000)
mean(exp(-U)^2)
mean(exp(-U^2))
U <- runif(10000000)
mean(exp(-U^2))
q()
library(tidyverse)
ggplot(diam1)+aes(x=price)+geom_histogram(bins=10)
set.seed(1234)
diam1 <- diamonds[sample(nrow(diamonds),800),]
ggplot(diam1)+aes(x=price)+geom_histogram(bins=10)
ggplot(diam1)+aes(x=carat,y=price)+geom_point()
diam1 %>% gather(key="dim",value="value",x,y,z) %>% ggplot() + aes(x=value,y=price)+geom_point()+facet_wrap(~dim)
pdf("~/Google Drive/QCM/EDHEC_R_2019/fig1.pdf",width=5,height=5)
ggplot(diam1)+aes(x=price)+geom_histogram(bins=10)
dev.off()
pdf("~/Google Drive/QCM/EDHEC_R_2019/fig2.pdf",width=5,height=5)
ggplot(diam1)+aes(x=carat,y=price)+geom_point()
dev.off()
pdf("~/Google Drive/QCM/EDHEC_R_2019/fig3.pdf",width=5,height=5)
diam1 %>% gather(key="dim",value="value",x,y,z) %>% ggplot() + aes(x=value,y=price)+geom_point()+facet_wrap(~dim)
dev.off()
n <- 1000
p <- 5
set.seed(1234)
X.mat <- matrix(rnorm(n*p),ncol=p)
eps <- rnorm(n,mean = 0,sd=0.5)
df <- data.frame(X.mat,eps)
train <- df %>% mutate(Y=X1+X2+X3+X4+X5+eps) %>% select(-eps)
m <- 500
p <- 5
set.seed(12345)
X.mat <- matrix(rnorm(m*p),ncol=5)
eps <- rnorm(m,mean = 0,sd=0.5)
test <- data.frame(X.mat,eps)
test <- df.test %>% mutate(Y=X1+X2+X3+X4+X5+eps) %>% select(-eps)
m <- 500
p <- 5
set.seed(12345)
X.mat <- matrix(rnorm(m*p),ncol=5)
eps <- rnorm(m,mean = 0,sd=0.5)
test <- data.frame(X.mat,eps)
test <- test %>% mutate(Y=X1+X2+X3+X4+X5+eps) %>% select(-eps)
head(train)
head(test)
n <- 1000
p <- 5
set.seed(1234)
X.mat <- matrix(rnorm(n*p),ncol=p)
eps <- rnorm(n,mean = 0,sd=0.5)
df <- data.frame(X.mat,eps)
train <- df %>% mutate(Y=X1+X2+X3+X4+X5+eps) %>% select(-eps)
m <- 500
p <- 5
set.seed(12345)
X.mat <- matrix(rnorm(m*p),ncol=5)
eps <- rnorm(m,mean = 0,sd=0.5)
test <- data.frame(X.mat,eps)
test <- df.test %>% mutate(Y=X1+X2+X3+X4+X5+eps) %>% select(-eps)
m <- 500
p <- 5
set.seed(12345)
X.mat <- matrix(rnorm(m*p),ncol=5)
eps <- rnorm(m,mean = 0,sd=0.5)
test <- data.frame(X.mat,eps)
test <- test %>% mutate(Y=X1+X2+X3+X4+X5+eps) %>% select(-eps)
mod1 <- lm(Y~.,data=train)
mod2 <- lm(Y~X1)
mod2 <- lm(Y~X1,data=train)
head(train)
head(train)
head(round(train,2))
head(round(train,3))
head(round(test,3))
mod1 <- lm(Y~.,data=train)
mod1 <- lm(Y~X1+X2+X3+X4+X5,data=train)
mod2 <- lm(Y~X1,data=train)
mod1 <- lm(Y~.,data=train)
mod11 <- lm(Y~X1+X2+X3+X4+X5,data=train)
mod1
mod11
lm(Y~I(X1),data=train)
mod2
prev <- data.frame(mod1=predict(mod1,newdata=test),mod2=predict(mod2,newdata=test))
head(prev)
predict(mod1,mod2,newdata=test)
prev <- data.frame(mod1=predict(mod1,newdata=test),mod2=predict(mod2,newdata=test))
prev %>% mutate(obs=test$Y) %>% summarize_at(1:2,~mean((obs-.)^2))
prev %>% mutate(obs=test$Y) %>% summarize_all(1:2,~mean((obs-.)^2))
prev %>% mutate(obs=test$Y) %>% summarize_all(1:2,mean((obs-.)^2))
prev %>% mutate(obs=test$Y) %>% summarize_all(mean((obs-.)^2))
prev %>% mutate(obs=test$Y) %>% summarize_all(~mean((obs-.)^2))
prev %>% mutate(obs=test$Y) %>% summarize_all(~mean((obs-.)^2)) %>% select(-obs)
prev %>% mutate(obs=test$Y) %>% summarize_all(mod1=mean((obs-mod1)^2)) %>%
prev %>% mutate(obs=test$Y) %>% summarize_all(mod1=mean((obs-mod1)^2))
prev %>% mutate(obs=test$Y) %>% summarize(mod1=mean((obs-mod1)^2))
prev %>% mutate(obs=test$Y) %>% summarize(mod1=mean((obs-mod1)^2),mod2=mean((obs-mod2)^2))
prev %>% summarize(mod1=mean((obs-mod1)^2),mod2=mean((obs-mod2)^2))
prev %>% mutate(obs=test$Y) %>% summarize_at(~mean((obs-.)^2))
prev %>% summarize_all(~mean((obs-.)^2))
prev %>% summarize_all(~mean((mod1-mod2)^2))
head(quakes)
head(quakes)
library(leaflet)
leaflet(data = quakes[1:20,]) %>% addTiles(urlTemplate = "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png") %>%
addMarkers(~long, ~lat, popup = ~as.character(mag))
leaflet(data = quakes) %>% addTiles(urlTemplate = "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png") %>%
addMarkers(~long, ~lat, popup = ~as.character(mag))
leaflet(data = quakes) %>% addTiles(urlTemplate = "http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png") %>%
addMarkers(~long, ~lat, popup = ~as.character(mag))
help(quakes)
head(quakes)
quakes[1,]
help("addMarkers")
leaflet(data = quakes) %>% addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag))
leaflet(data = quakes) %>% addTiles() %>%
addMarkers(~long, ~lat)
help("addMarkers")
leaflet(data = quakes) %>% addTiles() %>% addMarkers(long, lat)
leaflet(data = quakes) %>% aes(x=long,y=lat) %>% addMarkers()
leaflet(data = quakes) %>% addTiles(~long, ~lat) %>% addMarkers()
leaflet(data = quakes) %>% addTiles(~long, ~lat) %>% addMarkers()
leaflet(data = quakes) %>% addTiles() %>% aes(x=long,y=lat) %>% addMarkers()
leaflet(data = quakes) %>% addTiles() %>% addMarkers(~long, ~lat)
q()
graph(edges=c(1,2,2,3),n=4,directed=F) %>% plot()
library(tidyverse)
library(igraph)
graph(edges=c(1,2,2,3),n=4,directed=F) %>% plot()
G <- make_full_graph(8)+make_ring(10)
plot(G)
G2 <- G1 %>% add_edges(edges = c(13,4))
G1 <- make_full_graph(8)+make_ring(10)
G2 <- G1 %>% add_edges(edges = c(13,4))
plot(G2)
betweenness(G2)
betweenness(G2) %>% order(decreasing = TRUE)
edge_betweenness(G2)
EG <- edge_betweenness(G2)
help("plot.igraph")
plot(G2,edge.width=RG)
plot(G2,edge.width=EG)
plot(G2,edge.width=EG)
plot(G2,edge.width=EG/10)
plot(G2,edge.width=EG/10)
clus.EG <- cluster_edge_betweenness(G2)
dendPlot(clust.EG)
clust.EG <- cluster_edge_betweenness(G2)
dendPlot(clust.EG)
plot(G2,vertex.color=clust.EG$membership)
modularity(G2,clust.EG$membership)
graph(edges=c(1,2,2,3),n=4,directed=F) %>% plot(vertex.color="white")
graph(edges=c(1,2,2,3),n=4,directed=F) %>% plot(vertex.color="white",vertex.label="NA")
graph(edges=c(1,2,2,3),n=4,directed=F) %>% plot(vertex.color="white",vertex.label=NA)
mise <- read.graph('lesmis.gml',format="gml")
mise <- read.graph('lesmis.gml',format="gml")
df <- data.frame(Nom=vertex_attr(mise),Deg=degree(mise))
head(df)
vertex_attr(mise)
df <- data.frame(Nom=vertex_attr(mise)$label,Deg=degree(mise))
df
df <- data.frame(Nom=vertex_attr(mise)$label,Deg=degree(mise)) %>% arrange(desc(Deg))
df
df %>% slice(1:5)
set.seed(1234)
G <- make_graph(c(1,2,1,3,4,5,4,6,1,7,7,4),directed=FALSE)
diameter(G)
edge_density(G)
closeness(G)
betweenness(G)
1/14
3/42
1/14
help("edge_density")
edge_density(G,lopps=TRUE)
edge_density(G,loops=TRUE)
edge_density(G,loops=FALSE)
edge_density(simplify(G))
6/42
plot(G)
diameter(G)
edge_density(G)
closeness(G)
betweenness(G)
6/21
3/7
2/7
degree(G)
diameter(G)
edge_density(G)
degree(G)
closeness(G)
betweenness(G)
diameter(G)
edge_density(G)
degree(G)
closeness(G)
betweenness(G)
G <- make_ring(4)
modularity(G,1:4)
G <- make_ring(4)
modularity(G,1:4)
modularity(G,rep(1,4))
n
help("compare")
normalize <- function(x){
return(x/sqrt(sum(x^2)))
}
spec.clust.norm <- function(G,K){
n <- vcount(G)
LN <- laplacian_matrix(G,norm=TRUE,sparse=F)
specN <- eigen(LN)
dfN <- tibble(vp=1:length(specN$values),valeur=rev(specN$values))
graph <- ggplot(dfN)+aes(x=vp,y=valeur)+geom_point()+theme_classic()
U <- specN$vectors[,n:(n-K+1)]
U.norm <- t(apply(U,1,normalize))
clustering <- kmeans(U.norm,K,nstart=100)$cluster
return(list(groupe=clustering,graphe=graph,valeur=rev(specN$value)))
}
sc <- spec.clust.norm(mise,25)
sc$graphe
sc$groupe
set.seed(1234)
louv <- cluster_louvain(mise)
plot(mise, vertex.color=louv$membership)
plot(mise, vertex.color=louv$membership)
clust_EG <- cluster_edge_betweenness(mise)
plot(mise, vertex.color=clust_EG$membership)
plot(mise, vertex.color=clust_EG$membership)
sc$graphe
sc$graphe
sc$valeur
sc$valeur %>% round(1e-3)
sc$valeur %>% round(3)
sc1 <- spec.clust.norm(mise,4)
sc1$groupe
plot(mise, vertex.color=sc1$groupe)
plot(mise, vertex.color=sc1$groupe)
modularity(mise,louv$memberships)
modularity(mise,louv$memberships)
modularity(mise,clust_EG$memberships)
modularity(mise,louv$memberships)
modularity(mise,clust_EG$membership)
modularity(mise,sc1$groupe)
modularity(mise,louv$membership)
modularity(mise,clust_EG$membership)
modularity(mise,sc1$groupe)
sc1 <- spec.clust.norm(mise,6)
modularity(mise,louv$membership)
modularity(mise,clust_EG$membership)
modularity(mise,sc1$groupe)
df <- data.frame(noeuds=vertex_attr(mise)$label,Deg=degree(mise),
clos=closeness(mise),bet=betweenness(mise),
groupe=louv$membership)
head(df)
view(df)
df %>% group_by(groupe) %>% arrange(desc(Deg))
df %>% group_by(groupe) %>% arrange(desc(Deg))
df %>% group_by(as.factor(groupe)) %>% arrange(desc(Deg))
help("which.max")
head(df)
df %>% group_by(groupe) %>% summarize_at(2:4,~order())
df %>% group_by(groupe) %>% summarize_at(2:4,~order)
df %>% mutate(O.deg=order(Deg))
df
df %>% group_by(groupe) %>% mutate(O.deg=order(Deg))
df %>% group_by(groupe) %>% mutate(O.deg=order(Deg))
a <- df %>% group_by(groupe) %>% mutate(O.deg=order(Deg))
a$O.deg
a %>% filter(groupe==1)
help("order")
df %>% group_by(groupe) %>% mutate(O.deg=order(Deg,decreasing = TRUE))
df %>% group_by(groupe) %>% summarize(O.deg=order(Deg,decreasing = TRUE))
df1 <- df %>% group_by(groupe) %>% mutate(
deg.ord=order(Deg,decreasing = TRUE),
clos.ord=order(clos,decreasing = TRUE),
bet.ord=order(bet,decreasing = TRUE))
head(df1)
df1 %>% filter(groupe==1)
df1 %>% filter(groupe==1)
plot(mise,vertex.color=louv$membership)
df1 %>% filter(groupe==2)
vcount(mise)
df1 <- df %>% group_by(groupe) %>% mutate(
deg.ord=order(Deg,decreasing = TRUE),
clos.ord=order(clos,decreasing = TRUE),
bet.ord=order(bet,decreasing = TRUE))
df1 %>% filter(def.ord<=2)
df1 %>% filter(deg.ord<=2)
df1 %>% filter(deg.ord<=2) %>% select(noeuds,deg.ord)
help("spread")
df1 %>% filter(deg.ord<=2) %>% select(noeuds,deg.ord) %>% spread(noeuds,deg.ord)
df1 %>% filter(deg.ord<=2) %>% select(noeuds,deg.ord) %>% spread(noeuds,deg.ord)
df1 %>% filter(deg.ord<=2) %>% select(noeuds,deg.ord)
df1 %>% filter(deg.ord<=2) %>% select(noeuds,deg.ord) %>% spread(groupe,noeuds)
df1 %>% filter(deg.ord<=3) %>% select(noeuds,deg.ord) %>% spread(groupe,noeuds)
df1 %>% filter(deg.ord<=3) %>% select(groupe,noeuds,deg.ord) %>% spread(groupe,noeuds)
df <- data.frame(noeuds=vertex_attr(mise)$label,Deg=degree(mise),
clos=closeness(mise),bet=betweenness(mise),
groupe=louv$membership)
df.a <- df %>% group_by(groupe) %>% mutate(clos1=closeness(mise))
df %>% group_by(groupe) %>% summarize(clos1=closeness(mise))
df %>% group_by(groupe) %>% summarize(clos1=closeness(mise))
df %>% group_by(groupe) %>% mutate(clos1=closeness(mise))
head(df1)
df1 %>% filter(deg.ord<=3) %>% select(groupe,noeuds,deg.ord) %>% spread(noeuds,groupe)
df1 %>% filter(deg.ord<=3) %>% select(groupe,noeuds,deg.ord) %>% spread(groupe,noeuds)
df1 %>% filter(clos.ord<=3) %>% select(groupe,noeuds,clos.ord) %>% spread(groupe,noeuds)
mise.VN <- toVisNetworkData(mise)
library(visNetwork)
mise.VN <- toVisNetworkData(mise)
visNetwork(nodes=net.VN$nodes,edges=net.VN$edges)
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges)
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges)
names(mise.VN$nodes)
head(mise.VN)
head(mise.VN$nodes)
vertex_attr(mise)
mise.VN$nodes$label <- vertex_attr(mise)$label
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges)
mise.VN$nodes$group <- louv$membership
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges) %>%
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges)
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges) %>%
visOptions(selectedBy = "group")
help("visOptions")
library(tidyverse)
library(igraph)
library(visNetwork)
graph(edges=c(1,2,2,3),n=4,directed=F) %>% plot()
graph(edges=c(1,2,2,3),n=4,directed=F) %>%
plot(vertex.color="white",vertex.label=NA)
G1 <- make_full_graph(8)+make_ring(10)
G2 <- G1 %>% add_edges(edges = c(13,4))
betweenness(G2) %>% order(decreasing = TRUE)
EG <- edge_betweenness(G2)
plot(G2,edge.width=EG/10)
clust.EG <- cluster_edge_betweenness(G2)
dendPlot(clust.EG)
plot(G2,vertex.color=clust.EG$membership)
modularity(G2,clust.EG$membership)
mise <- read.graph('lesmis.gml',format="gml")
df <- data.frame(Nom=vertex_attr(mise)$label,Deg=degree(mise)) %>% arrange(desc(Deg))
df %>% slice(1:5)
set.seed(1234)
louv <- cluster_louvain(mise)
plot(mise, vertex.color=louv$membership)
clust_EG <- cluster_edge_betweenness(mise)
plot(mise, vertex.color=clust_EG$membership)
normalize <- function(x){
return(x/sqrt(sum(x^2)))
}
spec.clust.norm <- function(G,K){
n <- vcount(G)
LN <- laplacian_matrix(G,norm=TRUE,sparse=F)
specN <- eigen(LN)
dfN <- tibble(vp=1:length(specN$values),valeur=rev(specN$values))
graph <- ggplot(dfN)+aes(x=vp,y=valeur)+geom_point()+theme_classic()
U <- specN$vectors[,n:(n-K+1)]
U.norm <- t(apply(U,1,normalize))
clustering <- kmeans(U.norm,K,nstart=100)$cluster
return(list(groupe=clustering,graphe=graph,valeur=rev(specN$value)))
}
sc <- spec.clust.norm(mise,25)
sc$graphe
sc1 <- spec.clust.norm(mise,6)
plot(mise, vertex.color=sc1$groupe)
modularity(mise,louv$membership)
modularity(mise,clust_EG$membership)
modularity(mise,sc1$groupe)
mise.VN <- toVisNetworkData(mise)
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges)
mise.VN$nodes$label <- vertex_attr(mise)$label
mise.VN$nodes$group <- louv$membership
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges) %>%
visOptions(selectedBy = "group")
df <- data.frame(noeuds=vertex_attr(mise)$label,Deg=degree(mise),
clos=closeness(mise),bet=betweenness(mise),
groupe=louv$membership)
df1 <- df %>% group_by(groupe) %>% mutate(
deg.ord=order(Deg,decreasing = TRUE),
clos.ord=order(clos,decreasing = TRUE),
bet.ord=order(bet,decreasing = TRUE))
df1 %>% filter(deg.ord<=3) %>% select(groupe,noeuds,deg.ord) %>% spread(groupe,noeuds)
df1 %>% filter(clos.ord<=3) %>% select(groupe,noeuds,clos.ord) %>% spread(groupe,noeuds)
EG <- edge_betweenness(G2)
plot(G2,edge.width=EG/10)
df <- data.frame(Nom=vertex_attr(mise)$label,Deg=degree(mise)) %>% arrange(desc(Deg))
df
sc <- spec.clust.norm(mise,25)
sc$graphe
sc$valeur
sc <- spec.clust.norm(mise,25)
sc$graphe
sc$valeur %>% round(3)
sc1 <- spec.clust.norm(mise,10)
plot(mise, vertex.color=sc1$groupe)
modularity(mise,louv$membership)
modularity(mise,clust_EG$membership)
modularity(mise,sc1$groupe)
sc1 <- spec.clust.norm(mise,38)
plot(mise, vertex.color=sc1$groupe)
modularity(mise,louv$membership)
modularity(mise,clust_EG$membership)
modularity(mise,sc1$groupe)
sc1 <- spec.clust.norm(mise,20)
plot(mise, vertex.color=sc1$groupe)
modularity(mise,louv$membership)
modularity(mise,clust_EG$membership)
modularity(mise,sc1$groupe)
sc1 <- spec.clust.norm(mise,8)
plot(mise, vertex.color=sc1$groupe)
modularity(mise,louv$membership)
modularity(mise,clust_EG$membership)
modularity(mise,sc1$groupe)
mise.VN <- toVisNetworkData(mise)
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges)
mise.VN$nodes$label <- vertex_attr(mise)$label
mise.VN$nodes$group <- louv$membership
visNetwork(nodes=mise.VN$nodes,edges=mise.VN$edges) %>%
visOptions(selectedBy = "group")
df1 %>% filter(deg.ord<=3) %>% select(groupe,noeuds,deg.ord) %>% spread(groupe,noeuds)
help("make_full_graph")
q()
q()
source('~/Dropbox/LAURENT/COURS/INSA/TP/TP_NB/fonctions_TP1.R')
library(e1071)
df <- matrix(runif(1000),ncol=2) %>% as.data.frame()
library(tidyverse)
df <- matrix(runif(1000),ncol=2) %>% as.data.frame()
head(df)
df <- df %>% mutate(Y=((V1^2+V2^2)<0.5))
summary(df)
df <- df %>% mutate(Y=((V1^2+V2^2)<0.5)) %>% mutate(Y=as.numeric(Y))
summary(df)
help("svm")
mod1 <- svm(Y~.,data=df,kernel="radial basis")
mod1 <- svm(Y~.,data=df,kernel="radial")
plot(mod1)
plot(mod1)
mod1 <- svm(Y~.,data=df)
plot(mod1)
help(plot.svm)
plot(mod1,data=df)
plot(mod1,df,Y~.)
m2 <- svm(Species~., data = iris)
plot(m2, iris, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4))
plot(mod1,df,V2~V1)
plot(mod1,df,V1~V2)
plot(mod1,df,V1~V2)
head(df)
df <- df %>% mutate(Y=((V1^2+V2^2)<0.5)) %>% mutate(Y=as.factor(as.numeric(Y)))
mod1 <- svm(Y~.,data=df,kernel="radial")
plot(mod1,df,V1~V2)
mod2 <- svm(Y~.,data=df,kernel="radial",gamma=1e-5)
plot(mod1,df,V1~V2)
mod2 <- svm(Y~.,data=df,kernel="radial",gamma=1e5)
plot(mod1,df,V1~V2)
df[df$Y==0,Y] <- rbinom(sum(df$Y==0),1,0.1)
df[df$Y==0,"Y"] <- rbinom(sum(df$Y==0),1,0.1)
mod1 <- svm(Y~.,data=df,kernel="radial")
plot(mod1,df,V1~V2)
mod2 <- svm(Y~.,data=df,kernel="radial",gamma=1e5)
plot(mod1,df,V1~V2)
mod2 <- svm(Y~.,data=df,kernel="radial",gamma=1e-5)
plot(mod1,df,V1~V2)
mod2 <- svm(Y~.,data=df,kernel="radial",gamma=1e-5)
plot(mod2,df,V1~V2)
mod2 <- svm(Y~.,data=df,kernel="radial",gamma=1e5)
plot(mod2,df,V1~V2)
q()
df1 <- tibble(date1=as.Date(c("01/03/2017","05/18/2017",
"09/14/2018","01/18/2018"),"%m/%d/%Y"),temp=c(18,21,15,25))
library(tidyverse)
df1 <- tibble(date1=as.Date(c("01/03/2017","05/18/2017",
"09/14/2018","01/18/2018"),"%m/%d/%Y"),temp=c(18,21,15,25))
df2 <- tibble(wind=c(TRUE,FALSE,TRUE),date2=as.Date(c("05/18/2017","03/15/2017","01/18/2018"),"%m/%d/%Y"))
inner_join(df2,df1,by=c("date2"="date1"))
inner_join(df2,df1,by=c("date2"="date1"))
inner_join(df1,df2,by=c("date2"="date1"))
q()
q()
q()
q()
q()
q()
X <- runif(100000)
mean(sin(X^2))
X <- runif(10000000)
mean(sin(X^2))
q()
setwd("~/Dropbox/LIVRE_REGRESSION/GITHUB/regression-avec-R.github.io/code")
artere <- read.table("artere.txt",header=T)
model <- glm(chd~.,data=artere)
summary(model)
model <- glm(chd~age,data=artere)
summary(model)
model <- glm(chd~age,data=artere,family=binimial)
model <- glm(chd~age,data=artere,family=binomial)
summary(model)
names(summary(model))
summary(model$coefficients)
summary(model)$coefficients
confint(model)
q()
